<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gsoc on ninjaduck</title>
    <link>http://localhost:1313/tags/gsoc/</link>
    <description>Recent content in Gsoc on ninjaduck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jun 2014 13:35:54 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/gsoc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Porting a module to Drupal 8</title>
      <link>http://localhost:1313/porting-a-module-to-drupal8/</link>
      <pubDate>Mon, 02 Jun 2014 13:35:54 +0530</pubDate>
      
      <guid>http://localhost:1313/porting-a-module-to-drupal8/</guid>
      <description>

&lt;p&gt;I am porting a drupal 7 module named &lt;a href=&#34;https://drupal.org/project/securesite&#34;&gt;securesite&lt;/a&gt; to drupal 8 under of Google Summer Of Code&amp;rsquo;14. It has  been two weeks into the coding period and I am thoroughly enjoying it. This is my first port in a series of posts that I plan to write during this period.&lt;/p&gt;

&lt;p&gt;One look at a drupal 8 module is enough to make you realize that there have been some major changes in its architecture. If you observe closely, you will find ample use of OOP constructs, YAML files, and a directory structure totally different form its drupal 7 counterpart. There is enough mention about the big changes in drupal 8 on the web to scare anyone. With this series of posts, I aim to simplify this process of porting a module to drupal 8 for everyone - new to drupal or already experienced in drupal 7. I will also clarify some of the less documented things about drupal 8 which perplexed me while porting.&lt;/p&gt;

&lt;h2 id=&#34;development-environment:d82a0605baa87e632de3976d42b6e284&#34;&gt;Development Environment&lt;/h2&gt;

&lt;p&gt;First step is to set up the development environment for the project. I prefer &lt;a href=&#34;http://www.jetbrains.com/phpstorm/&#34;&gt;phpstorm&lt;/a&gt; IDE, even though it is not free, due to its excellent drupal support. The following link explains how to set up phpstorm for drupal module development -&lt;a href=&#34;https://drupal.org/node/1962108&#34;&gt;https://drupal.org/node/1962108&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Currently, drupal 8 support is avaliable in &lt;a href=&#34;http://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Early+Access+Program&#34;&gt;phpstorm-eap&lt;/a&gt;. The IDE is awesome enough to not only point out the syntax errors, but even mark the functions you are using that have been deprecated or don&amp;rsquo;t exist drupal 8.&lt;/p&gt;

&lt;h2 id=&#34;oop-namespaces-and-yaml-files:d82a0605baa87e632de3976d42b6e284&#34;&gt;OOP, Namespaces and YAML files&lt;/h2&gt;

&lt;p&gt;I feel that the best way of learning on how to make a d8 module is by looking at the existing d8 module in drupal core. They make up for the lack of documentation in many places.&lt;/p&gt;

&lt;p&gt;On looking at a d8 version of a d7 module, first thing you need to figure out is - where did all the code and hooks in &lt;code&gt;.module&lt;/code&gt; file go?
The concepts of PHP namespaces and PSR-0 standards are very lucidly explained by &lt;a href=&#34;https://drupal.org/user/78040&#34;&gt;effulgentsia&lt;/a&gt; in
&lt;a href=&#34;http://effulgentsia.drupalgardens.com/content/drupal-8-hello-oop-hello-world&#34;&gt;http://effulgentsia.drupalgardens.com/content/drupal-8-hello-oop-hello-world&lt;/a&gt;
Reading above removes a lot of confusion about so many directories and files in the module and the use of namespaces.
Some other useful points to be noted from the above blog post are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.info&lt;/code&gt; file has changed to &lt;code&gt;.info.yml&lt;/code&gt; file. You can find more about it on &lt;a href=&#34;https://drupal.org/node/2000204&#34;&gt;https://drupal.org/node/2000204&lt;/a&gt;. For those who don&amp;rsquo;t know about the &lt;code&gt;.info&lt;/code&gt; file, look up the drupal documentation for the same at &lt;a href=&#34;https://drupal.org/node/542202&#34;&gt;https://drupal.org/node/542202&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use of Controllers and routing by YAML files which was earlier implemented by &lt;code&gt;hook_menu&lt;/code&gt;. More on routing at &lt;a href=&#34;https://drupal.org/developing/api/8/routing&#34;&gt;https://drupal.org/developing/api/8/routing&lt;/a&gt;. If you don&amp;rsquo;t know about drupal hooks, look it up in the drupal documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration-management:d82a0605baa87e632de3976d42b6e284&#34;&gt;Configuration Management&lt;/h2&gt;

&lt;p&gt;One of the bigger changes in Drupal 8 is the Configuration Management Initiative which completely replaces the Drupal 7 variables. One of the reasons for this is to be able to store configuration in files rather than database which helps in easier import-export of the configuration.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you don&amp;rsquo;t know what varibales are and why are they used, here is a simple explanation. Many a times in your module, you need to store module settings or state or any other information required by the module. These are stored in the variable table in the database.&lt;/li&gt;
&lt;li&gt;To know more about the Simple Configuration API, look at &lt;a href=&#34;https://drupal.org/node/1809490&#34;&gt;https://drupal.org/node/1809490&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The next link explains on how to convert the variables of your d7 module to d8. It it perhaps the most useful link you will find regarding CMI.  &lt;a href=&#34;https://drupal.org/node/1667896&#34;&gt;https://drupal.org/node/1667896&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can use the &lt;a href=&#34;https://drupal.org/project/config_inspector&#34;&gt;Config Inspector&lt;/a&gt; module to find the variables in core. Once you have converted your variables to configuration keys, you can see their values through this module(you will also have to create a schema file for this module to show your configuration). Also have a look at the config.yml file of core modules to have an idea of how to convert the variables to configuration keys.&lt;/li&gt;
&lt;li&gt;You can define schema for you configuration. &lt;a href=&#34;https://drupal.org/node/1905070&#34;&gt;https://drupal.org/node/1905070&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Apart from configuration, there are other type of informations also like state information and configuration entities. More on this at - &lt;a href=&#34;https://drupal.org/node/2120523&#34;&gt;https://drupal.org/node/2120523&lt;/a&gt;. Many of the d7 variables have been moved to state. The next link explains on how to find these varibles and convert them. &lt;a href=&#34;https://drupal.org/node/2120523&#34;&gt;https://drupal.org/node/1787318&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;key-takeaways:d82a0605baa87e632de3976d42b6e284&#34;&gt;Key Takeaways&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;config keys are just like variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.settings.yml&lt;/code&gt; file is to define default values for the varibales&lt;/li&gt;
&lt;li&gt;It is not necessary to define a key in &lt;code&gt;.settings.yml&lt;/code&gt; file before using it(get or set) anywhere in the code. But make sure to include all your keys in the schema file.&lt;/li&gt;
&lt;li&gt;can also set default values in &lt;code&gt;hook_install()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If a key has not been set earlier in the code and its default value is not defined in &lt;code&gt;hook_install()&lt;/code&gt; or &lt;code&gt;.settings.yml&lt;/code&gt; file, get function on the key returns NULL&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-file:d82a0605baa87e632de3976d42b6e284&#34;&gt;.install file&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;hook_enable&lt;/code&gt; and &lt;code&gt;hook_disable&lt;/code&gt; have been deprecated. &lt;a href=&#34;https://drupal.org/node/2193013&#34;&gt;https://drupal.org/node/2193013&lt;/a&gt;. To port to d8, all the tasks that were being performed in  &lt;code&gt;hook_enable&lt;/code&gt; are to be performed in &lt;code&gt;hook_install&lt;/code&gt;. Same with &lt;code&gt;hook_disable&lt;/code&gt; and &lt;code&gt;hook_uninstall&lt;/code&gt;.
If you have not developed a drupal 7 module before, the difference between disable-enable and install-uninstall can be confounding. Disabling a module leaves its configuration untouched, along with any data like variables it may have created while uninstalling deletes all the data. Due to removal of disabled state in d8, some of the tasks performed in &lt;code&gt;hook_enable&lt;/code&gt; may become unecessary.&lt;/p&gt;

&lt;p&gt;I hope someone finds this useful. I will write about forms, tests and authentication in my next blog post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A summer for Drupal</title>
      <link>http://localhost:1313/a-summer-for-drupal/</link>
      <pubDate>Tue, 22 Apr 2014 13:35:54 +0530</pubDate>
      
      <guid>http://localhost:1313/a-summer-for-drupal/</guid>
      <description>&lt;p&gt;Today has been great for me in many ways. I reached the 1000 friends mark on fb, scored good in an exam. But the best thing that happened to me today is getting accepted into Google Summer Of Code&amp;rsquo;14.&lt;/p&gt;

&lt;p&gt;This is the first time I applied in this program and getting selected has been nothing less than pure bliss. I am exaggerating a little here but there is that feeling that lasts just for a few seconds. After that, it is goes away in &lt;a href=&#34;http://www.urbandictionary.com/define.php?term=GPL&amp;amp;defid=1069443&#34;&gt;GPL&lt;/a&gt; :P, contemplating about the summers and gloating over the results.&lt;/p&gt;

&lt;p&gt;In the past month, that it took for the results to be announced after proposal submission, I was topped up with anticipation. Last few minutes before the accepted proposals were announced, I was so tense with pounding heart and butterflies in my stomach! Add to that the extreme sluggishness with which the results loaded when they were announced. It took more than five minutes for my name to show up on the screen. But all&amp;rsquo;s well that ends well.&lt;/p&gt;

&lt;p&gt;My project for GSoC is to port &lt;a href=&#34;https://drupal.org/project/securesite&#34;&gt;Securesite module&lt;/a&gt; to drupal 8. The securesite module gives the facility to authenticate users using http basic auth/ digest auth. Admin can restrict access to pages based on user role. This means the site will be inaccessible to search engines and crawlers, but you can still allow access to certain users. It is especially helpful when the site is under construction or maintenance. The full proposal is available &lt;a href=&#34;https://docs.google.com/document/d/1b6JBCDkmPPKZTH67FwIXRYaCC0zy4ysFkwEx83HM-gU/edit?usp=sharing&#34;&gt;here&lt;/a&gt;. I hope to have an enjoyable summer with drupal.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://www.facebook.com/adarshaj&#34;&gt;Adarsh&lt;/a&gt; and &lt;a href=&#34;http://vikraman.org/&#34;&gt;Vikraman&lt;/a&gt; for guiding me throughout the application period.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>